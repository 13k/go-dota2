// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_client_team.proto

package dota_gcmessages_client_team

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ETeamInviteResult int32

const (
	ETeamInviteResult_TEAM_INVITE_SUCCESS                            ETeamInviteResult = 0
	ETeamInviteResult_TEAM_INVITE_FAILURE_INVITE_REJECTED            ETeamInviteResult = 1
	ETeamInviteResult_TEAM_INVITE_FAILURE_INVITE_TIMEOUT             ETeamInviteResult = 2
	ETeamInviteResult_TEAM_INVITE_ERROR_TEAM_AT_MEMBER_LIMIT         ETeamInviteResult = 3
	ETeamInviteResult_TEAM_INVITE_ERROR_TEAM_LOCKED                  ETeamInviteResult = 4
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITEE_NOT_AVAILABLE        ETeamInviteResult = 5
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITEE_BUSY                 ETeamInviteResult = 6
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITEE_ALREADY_MEMBER       ETeamInviteResult = 7
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITEE_AT_TEAM_LIMIT        ETeamInviteResult = 8
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITEE_INSUFFICIENT_LEVEL   ETeamInviteResult = 9
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITER_INVALID_ACCOUNT_TYPE ETeamInviteResult = 10
	ETeamInviteResult_TEAM_INVITE_ERROR_INVITER_NOT_ADMIN            ETeamInviteResult = 11
	ETeamInviteResult_TEAM_INVITE_ERROR_INCORRECT_USER_RESPONDED     ETeamInviteResult = 12
	ETeamInviteResult_TEAM_INVITE_ERROR_UNSPECIFIED                  ETeamInviteResult = 13
)

var ETeamInviteResult_name = map[int32]string{
	0:  "TEAM_INVITE_SUCCESS",
	1:  "TEAM_INVITE_FAILURE_INVITE_REJECTED",
	2:  "TEAM_INVITE_FAILURE_INVITE_TIMEOUT",
	3:  "TEAM_INVITE_ERROR_TEAM_AT_MEMBER_LIMIT",
	4:  "TEAM_INVITE_ERROR_TEAM_LOCKED",
	5:  "TEAM_INVITE_ERROR_INVITEE_NOT_AVAILABLE",
	6:  "TEAM_INVITE_ERROR_INVITEE_BUSY",
	7:  "TEAM_INVITE_ERROR_INVITEE_ALREADY_MEMBER",
	8:  "TEAM_INVITE_ERROR_INVITEE_AT_TEAM_LIMIT",
	9:  "TEAM_INVITE_ERROR_INVITEE_INSUFFICIENT_LEVEL",
	10: "TEAM_INVITE_ERROR_INVITER_INVALID_ACCOUNT_TYPE",
	11: "TEAM_INVITE_ERROR_INVITER_NOT_ADMIN",
	12: "TEAM_INVITE_ERROR_INCORRECT_USER_RESPONDED",
	13: "TEAM_INVITE_ERROR_UNSPECIFIED",
}
var ETeamInviteResult_value = map[string]int32{
	"TEAM_INVITE_SUCCESS":                            0,
	"TEAM_INVITE_FAILURE_INVITE_REJECTED":            1,
	"TEAM_INVITE_FAILURE_INVITE_TIMEOUT":             2,
	"TEAM_INVITE_ERROR_TEAM_AT_MEMBER_LIMIT":         3,
	"TEAM_INVITE_ERROR_TEAM_LOCKED":                  4,
	"TEAM_INVITE_ERROR_INVITEE_NOT_AVAILABLE":        5,
	"TEAM_INVITE_ERROR_INVITEE_BUSY":                 6,
	"TEAM_INVITE_ERROR_INVITEE_ALREADY_MEMBER":       7,
	"TEAM_INVITE_ERROR_INVITEE_AT_TEAM_LIMIT":        8,
	"TEAM_INVITE_ERROR_INVITEE_INSUFFICIENT_LEVEL":   9,
	"TEAM_INVITE_ERROR_INVITER_INVALID_ACCOUNT_TYPE": 10,
	"TEAM_INVITE_ERROR_INVITER_NOT_ADMIN":            11,
	"TEAM_INVITE_ERROR_INCORRECT_USER_RESPONDED":     12,
	"TEAM_INVITE_ERROR_UNSPECIFIED":                  13,
}

func (x ETeamInviteResult) Enum() *ETeamInviteResult {
	p := new(ETeamInviteResult)
	*p = x
	return p
}
func (x ETeamInviteResult) String() string {
	return proto.EnumName(ETeamInviteResult_name, int32(x))
}
func (x *ETeamInviteResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETeamInviteResult_value, data, "ETeamInviteResult")
	if err != nil {
		return err
	}
	*x = ETeamInviteResult(value)
	return nil
}
func (ETeamInviteResult) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CMsgDOTACreateTeamResponse_Result int32

const (
	CMsgDOTACreateTeamResponse_INVALID                        CMsgDOTACreateTeamResponse_Result = -1
	CMsgDOTACreateTeamResponse_SUCCESS                        CMsgDOTACreateTeamResponse_Result = 0
	CMsgDOTACreateTeamResponse_NAME_EMPTY                     CMsgDOTACreateTeamResponse_Result = 1
	CMsgDOTACreateTeamResponse_NAME_BAD_CHARACTERS            CMsgDOTACreateTeamResponse_Result = 2
	CMsgDOTACreateTeamResponse_NAME_TAKEN                     CMsgDOTACreateTeamResponse_Result = 3
	CMsgDOTACreateTeamResponse_NAME_TOO_LONG                  CMsgDOTACreateTeamResponse_Result = 4
	CMsgDOTACreateTeamResponse_TAG_EMPTY                      CMsgDOTACreateTeamResponse_Result = 5
	CMsgDOTACreateTeamResponse_TAG_BAD_CHARACTERS             CMsgDOTACreateTeamResponse_Result = 6
	CMsgDOTACreateTeamResponse_TAG_TAKEN                      CMsgDOTACreateTeamResponse_Result = 7
	CMsgDOTACreateTeamResponse_TAG_TOO_LONG                   CMsgDOTACreateTeamResponse_Result = 8
	CMsgDOTACreateTeamResponse_CREATOR_BUSY                   CMsgDOTACreateTeamResponse_Result = 9
	CMsgDOTACreateTeamResponse_UNSPECIFIED_ERROR              CMsgDOTACreateTeamResponse_Result = 10
	CMsgDOTACreateTeamResponse_CREATOR_TEAM_LIMIT_REACHED     CMsgDOTACreateTeamResponse_Result = 11
	CMsgDOTACreateTeamResponse_NO_LOGO                        CMsgDOTACreateTeamResponse_Result = 12
	CMsgDOTACreateTeamResponse_CREATOR_TEAM_CREATION_COOLDOWN CMsgDOTACreateTeamResponse_Result = 13
	CMsgDOTACreateTeamResponse_LOGO_UPLOAD_FAILED             CMsgDOTACreateTeamResponse_Result = 14
	CMsgDOTACreateTeamResponse_NAME_CHANGED_TOO_RECENTLY      CMsgDOTACreateTeamResponse_Result = 15
	CMsgDOTACreateTeamResponse_CREATOR_INSUFFICIENT_LEVEL     CMsgDOTACreateTeamResponse_Result = 16
	CMsgDOTACreateTeamResponse_INVALID_ACCOUNT_TYPE           CMsgDOTACreateTeamResponse_Result = 17
)

var CMsgDOTACreateTeamResponse_Result_name = map[int32]string{
	-1: "INVALID",
	0:  "SUCCESS",
	1:  "NAME_EMPTY",
	2:  "NAME_BAD_CHARACTERS",
	3:  "NAME_TAKEN",
	4:  "NAME_TOO_LONG",
	5:  "TAG_EMPTY",
	6:  "TAG_BAD_CHARACTERS",
	7:  "TAG_TAKEN",
	8:  "TAG_TOO_LONG",
	9:  "CREATOR_BUSY",
	10: "UNSPECIFIED_ERROR",
	11: "CREATOR_TEAM_LIMIT_REACHED",
	12: "NO_LOGO",
	13: "CREATOR_TEAM_CREATION_COOLDOWN",
	14: "LOGO_UPLOAD_FAILED",
	15: "NAME_CHANGED_TOO_RECENTLY",
	16: "CREATOR_INSUFFICIENT_LEVEL",
	17: "INVALID_ACCOUNT_TYPE",
}
var CMsgDOTACreateTeamResponse_Result_value = map[string]int32{
	"INVALID":                        -1,
	"SUCCESS":                        0,
	"NAME_EMPTY":                     1,
	"NAME_BAD_CHARACTERS":            2,
	"NAME_TAKEN":                     3,
	"NAME_TOO_LONG":                  4,
	"TAG_EMPTY":                      5,
	"TAG_BAD_CHARACTERS":             6,
	"TAG_TAKEN":                      7,
	"TAG_TOO_LONG":                   8,
	"CREATOR_BUSY":                   9,
	"UNSPECIFIED_ERROR":              10,
	"CREATOR_TEAM_LIMIT_REACHED":     11,
	"NO_LOGO":                        12,
	"CREATOR_TEAM_CREATION_COOLDOWN": 13,
	"LOGO_UPLOAD_FAILED":             14,
	"NAME_CHANGED_TOO_RECENTLY":      15,
	"CREATOR_INSUFFICIENT_LEVEL":     16,
	"INVALID_ACCOUNT_TYPE":           17,
}

func (x CMsgDOTACreateTeamResponse_Result) Enum() *CMsgDOTACreateTeamResponse_Result {
	p := new(CMsgDOTACreateTeamResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTACreateTeamResponse_Result) String() string {
	return proto.EnumName(CMsgDOTACreateTeamResponse_Result_name, int32(x))
}
func (x *CMsgDOTACreateTeamResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTACreateTeamResponse_Result_value, data, "CMsgDOTACreateTeamResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTACreateTeamResponse_Result(value)
	return nil
}
func (CMsgDOTACreateTeamResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

type CMsgDOTAEditTeamDetailsResponse_Result int32

const (
	CMsgDOTAEditTeamDetailsResponse_SUCCESS                      CMsgDOTAEditTeamDetailsResponse_Result = 0
	CMsgDOTAEditTeamDetailsResponse_FAILURE_INVALID_ACCOUNT_TYPE CMsgDOTAEditTeamDetailsResponse_Result = 1
	CMsgDOTAEditTeamDetailsResponse_FAILURE_NOT_MEMBER           CMsgDOTAEditTeamDetailsResponse_Result = 2
	CMsgDOTAEditTeamDetailsResponse_FAILURE_TEAM_LOCKED          CMsgDOTAEditTeamDetailsResponse_Result = 3
	CMsgDOTAEditTeamDetailsResponse_FAILURE_UNSPECIFIED_ERROR    CMsgDOTAEditTeamDetailsResponse_Result = 4
)

var CMsgDOTAEditTeamDetailsResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_INVALID_ACCOUNT_TYPE",
	2: "FAILURE_NOT_MEMBER",
	3: "FAILURE_TEAM_LOCKED",
	4: "FAILURE_UNSPECIFIED_ERROR",
}
var CMsgDOTAEditTeamDetailsResponse_Result_value = map[string]int32{
	"SUCCESS":                      0,
	"FAILURE_INVALID_ACCOUNT_TYPE": 1,
	"FAILURE_NOT_MEMBER":           2,
	"FAILURE_TEAM_LOCKED":          3,
	"FAILURE_UNSPECIFIED_ERROR":    4,
}

func (x CMsgDOTAEditTeamDetailsResponse_Result) Enum() *CMsgDOTAEditTeamDetailsResponse_Result {
	p := new(CMsgDOTAEditTeamDetailsResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAEditTeamDetailsResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAEditTeamDetailsResponse_Result_name, int32(x))
}
func (x *CMsgDOTAEditTeamDetailsResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAEditTeamDetailsResponse_Result_value, data, "CMsgDOTAEditTeamDetailsResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAEditTeamDetailsResponse_Result(value)
	return nil
}
func (CMsgDOTAEditTeamDetailsResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

type CMsgDOTAKickTeamMemberResponse_Result int32

const (
	CMsgDOTAKickTeamMemberResponse_SUCCESS                      CMsgDOTAKickTeamMemberResponse_Result = 0
	CMsgDOTAKickTeamMemberResponse_FAILURE_INVALID_ACCOUNT_TYPE CMsgDOTAKickTeamMemberResponse_Result = 1
	CMsgDOTAKickTeamMemberResponse_FAILURE_KICKER_NOT_ADMIN     CMsgDOTAKickTeamMemberResponse_Result = 2
	CMsgDOTAKickTeamMemberResponse_FAILURE_KICKEE_NOT_MEMBER    CMsgDOTAKickTeamMemberResponse_Result = 3
	CMsgDOTAKickTeamMemberResponse_FAILURE_TEAM_LOCKED          CMsgDOTAKickTeamMemberResponse_Result = 4
	CMsgDOTAKickTeamMemberResponse_FAILURE_UNSPECIFIED_ERROR    CMsgDOTAKickTeamMemberResponse_Result = 5
)

var CMsgDOTAKickTeamMemberResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_INVALID_ACCOUNT_TYPE",
	2: "FAILURE_KICKER_NOT_ADMIN",
	3: "FAILURE_KICKEE_NOT_MEMBER",
	4: "FAILURE_TEAM_LOCKED",
	5: "FAILURE_UNSPECIFIED_ERROR",
}
var CMsgDOTAKickTeamMemberResponse_Result_value = map[string]int32{
	"SUCCESS":                      0,
	"FAILURE_INVALID_ACCOUNT_TYPE": 1,
	"FAILURE_KICKER_NOT_ADMIN":     2,
	"FAILURE_KICKEE_NOT_MEMBER":    3,
	"FAILURE_TEAM_LOCKED":          4,
	"FAILURE_UNSPECIFIED_ERROR":    5,
}

func (x CMsgDOTAKickTeamMemberResponse_Result) Enum() *CMsgDOTAKickTeamMemberResponse_Result {
	p := new(CMsgDOTAKickTeamMemberResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAKickTeamMemberResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAKickTeamMemberResponse_Result_name, int32(x))
}
func (x *CMsgDOTAKickTeamMemberResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAKickTeamMemberResponse_Result_value, data, "CMsgDOTAKickTeamMemberResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAKickTeamMemberResponse_Result(value)
	return nil
}
func (CMsgDOTAKickTeamMemberResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21, 0}
}

type CMsgDOTATransferTeamAdminResponse_Result int32

const (
	CMsgDOTATransferTeamAdminResponse_SUCCESS                      CMsgDOTATransferTeamAdminResponse_Result = 0
	CMsgDOTATransferTeamAdminResponse_FAILURE_INVALID_ACCOUNT_TYPE CMsgDOTATransferTeamAdminResponse_Result = 1
	CMsgDOTATransferTeamAdminResponse_FAILURE_NOT_ADMIN            CMsgDOTATransferTeamAdminResponse_Result = 2
	CMsgDOTATransferTeamAdminResponse_FAILURE_SAME_ACCOUNT         CMsgDOTATransferTeamAdminResponse_Result = 3
	CMsgDOTATransferTeamAdminResponse_FAILURE_NOT_MEMBER           CMsgDOTATransferTeamAdminResponse_Result = 4
	CMsgDOTATransferTeamAdminResponse_FAILURE_UNSPECIFIED_ERROR    CMsgDOTATransferTeamAdminResponse_Result = 5
)

var CMsgDOTATransferTeamAdminResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_INVALID_ACCOUNT_TYPE",
	2: "FAILURE_NOT_ADMIN",
	3: "FAILURE_SAME_ACCOUNT",
	4: "FAILURE_NOT_MEMBER",
	5: "FAILURE_UNSPECIFIED_ERROR",
}
var CMsgDOTATransferTeamAdminResponse_Result_value = map[string]int32{
	"SUCCESS":                      0,
	"FAILURE_INVALID_ACCOUNT_TYPE": 1,
	"FAILURE_NOT_ADMIN":            2,
	"FAILURE_SAME_ACCOUNT":         3,
	"FAILURE_NOT_MEMBER":           4,
	"FAILURE_UNSPECIFIED_ERROR":    5,
}

func (x CMsgDOTATransferTeamAdminResponse_Result) Enum() *CMsgDOTATransferTeamAdminResponse_Result {
	p := new(CMsgDOTATransferTeamAdminResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTATransferTeamAdminResponse_Result) String() string {
	return proto.EnumName(CMsgDOTATransferTeamAdminResponse_Result_name, int32(x))
}
func (x *CMsgDOTATransferTeamAdminResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTATransferTeamAdminResponse_Result_value, data, "CMsgDOTATransferTeamAdminResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTATransferTeamAdminResponse_Result(value)
	return nil
}
func (CMsgDOTATransferTeamAdminResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23, 0}
}

type CMsgDOTAChangeTeamSubResponse_Result int32

const (
	CMsgDOTAChangeTeamSubResponse_SUCCESS                      CMsgDOTAChangeTeamSubResponse_Result = 0
	CMsgDOTAChangeTeamSubResponse_FAILURE_INVALID_ACCOUNT_TYPE CMsgDOTAChangeTeamSubResponse_Result = 1
	CMsgDOTAChangeTeamSubResponse_FAILURE_SAME_ACCOUNT         CMsgDOTAChangeTeamSubResponse_Result = 2
	CMsgDOTAChangeTeamSubResponse_FAILURE_NOT_ADMIN            CMsgDOTAChangeTeamSubResponse_Result = 3
	CMsgDOTAChangeTeamSubResponse_FAILURE_NOT_MEMBER           CMsgDOTAChangeTeamSubResponse_Result = 4
	CMsgDOTAChangeTeamSubResponse_FAILURE_NOT_SUB              CMsgDOTAChangeTeamSubResponse_Result = 5
	CMsgDOTAChangeTeamSubResponse_FAILURE_ALREADY_SUB          CMsgDOTAChangeTeamSubResponse_Result = 6
	CMsgDOTAChangeTeamSubResponse_FAILURE_UNSPECIFIED_ERROR    CMsgDOTAChangeTeamSubResponse_Result = 7
)

var CMsgDOTAChangeTeamSubResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_INVALID_ACCOUNT_TYPE",
	2: "FAILURE_SAME_ACCOUNT",
	3: "FAILURE_NOT_ADMIN",
	4: "FAILURE_NOT_MEMBER",
	5: "FAILURE_NOT_SUB",
	6: "FAILURE_ALREADY_SUB",
	7: "FAILURE_UNSPECIFIED_ERROR",
}
var CMsgDOTAChangeTeamSubResponse_Result_value = map[string]int32{
	"SUCCESS":                      0,
	"FAILURE_INVALID_ACCOUNT_TYPE": 1,
	"FAILURE_SAME_ACCOUNT":         2,
	"FAILURE_NOT_ADMIN":            3,
	"FAILURE_NOT_MEMBER":           4,
	"FAILURE_NOT_SUB":              5,
	"FAILURE_ALREADY_SUB":          6,
	"FAILURE_UNSPECIFIED_ERROR":    7,
}

func (x CMsgDOTAChangeTeamSubResponse_Result) Enum() *CMsgDOTAChangeTeamSubResponse_Result {
	p := new(CMsgDOTAChangeTeamSubResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAChangeTeamSubResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAChangeTeamSubResponse_Result_name, int32(x))
}
func (x *CMsgDOTAChangeTeamSubResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAChangeTeamSubResponse_Result_value, data, "CMsgDOTAChangeTeamSubResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAChangeTeamSubResponse_Result(value)
	return nil
}
func (CMsgDOTAChangeTeamSubResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 0}
}

type CMsgDOTALeaveTeamResponse_Result int32

const (
	CMsgDOTALeaveTeamResponse_SUCCESS                   CMsgDOTALeaveTeamResponse_Result = 0
	CMsgDOTALeaveTeamResponse_FAILURE_NOT_MEMBER        CMsgDOTALeaveTeamResponse_Result = 1
	CMsgDOTALeaveTeamResponse_FAILURE_TEAM_LOCKED       CMsgDOTALeaveTeamResponse_Result = 2
	CMsgDOTALeaveTeamResponse_FAILURE_UNSPECIFIED_ERROR CMsgDOTALeaveTeamResponse_Result = 3
)

var CMsgDOTALeaveTeamResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_NOT_MEMBER",
	2: "FAILURE_TEAM_LOCKED",
	3: "FAILURE_UNSPECIFIED_ERROR",
}
var CMsgDOTALeaveTeamResponse_Result_value = map[string]int32{
	"SUCCESS":                   0,
	"FAILURE_NOT_MEMBER":        1,
	"FAILURE_TEAM_LOCKED":       2,
	"FAILURE_UNSPECIFIED_ERROR": 3,
}

func (x CMsgDOTALeaveTeamResponse_Result) Enum() *CMsgDOTALeaveTeamResponse_Result {
	p := new(CMsgDOTALeaveTeamResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTALeaveTeamResponse_Result) String() string {
	return proto.EnumName(CMsgDOTALeaveTeamResponse_Result_name, int32(x))
}
func (x *CMsgDOTALeaveTeamResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTALeaveTeamResponse_Result_value, data, "CMsgDOTALeaveTeamResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTALeaveTeamResponse_Result(value)
	return nil
}
func (CMsgDOTALeaveTeamResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27, 0}
}

type CMsgDOTATeamMemberSDO struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TeamIds          []uint32 `protobuf:"varint,2,rep,name=team_ids,json=teamIds" json:"team_ids,omitempty"`
	ProfileTeamId    *uint32  `protobuf:"varint,3,opt,name=profile_team_id,json=profileTeamId" json:"profile_team_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTATeamMemberSDO) Reset()                    { *m = CMsgDOTATeamMemberSDO{} }
func (m *CMsgDOTATeamMemberSDO) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamMemberSDO) ProtoMessage()               {}
func (*CMsgDOTATeamMemberSDO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CMsgDOTATeamMemberSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamMemberSDO) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

func (m *CMsgDOTATeamMemberSDO) GetProfileTeamId() uint32 {
	if m != nil && m.ProfileTeamId != nil {
		return *m.ProfileTeamId
	}
	return 0
}

type CMsgDOTATeamAdminSDO struct {
	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TeamIds          []uint32 `protobuf:"varint,2,rep,name=team_ids,json=teamIds" json:"team_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTATeamAdminSDO) Reset()                    { *m = CMsgDOTATeamAdminSDO{} }
func (m *CMsgDOTATeamAdminSDO) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamAdminSDO) ProtoMessage()               {}
func (*CMsgDOTATeamAdminSDO) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CMsgDOTATeamAdminSDO) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamAdminSDO) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

type CMsgDOTATeamMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TimeJoined       *uint32 `protobuf:"varint,4,opt,name=time_joined,json=timeJoined" json:"time_joined,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamMember) Reset()                    { *m = CMsgDOTATeamMember{} }
func (m *CMsgDOTATeamMember) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamMember) ProtoMessage()               {}
func (*CMsgDOTATeamMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CMsgDOTATeamMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamMember) GetTimeJoined() uint32 {
	if m != nil && m.TimeJoined != nil {
		return *m.TimeJoined
	}
	return 0
}

type CMsgDOTATeam struct {
	Members                      []*CMsgDOTATeamMember `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
	TeamId                       *uint32               `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Name                         *string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Tag                          *string               `protobuf:"bytes,4,opt,name=tag" json:"tag,omitempty"`
	AdminId                      *uint32               `protobuf:"varint,5,opt,name=admin_id,json=adminId" json:"admin_id,omitempty"`
	TimeCreated                  *uint32               `protobuf:"varint,6,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	Disbanded                    *bool                 `protobuf:"varint,7,opt,name=disbanded" json:"disbanded,omitempty"`
	Wins                         *uint32               `protobuf:"varint,8,opt,name=wins" json:"wins,omitempty"`
	Losses                       *uint32               `protobuf:"varint,9,opt,name=losses" json:"losses,omitempty"`
	Rank                         *uint32               `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	CalibrationGamesRemaining    *uint32               `protobuf:"varint,24,opt,name=calibration_games_remaining,json=calibrationGamesRemaining" json:"calibration_games_remaining,omitempty"`
	Logo                         *uint64               `protobuf:"varint,11,opt,name=logo" json:"logo,omitempty"`
	BaseLogo                     *uint64               `protobuf:"varint,12,opt,name=base_logo,json=baseLogo" json:"base_logo,omitempty"`
	BannerLogo                   *uint64               `protobuf:"varint,13,opt,name=banner_logo,json=bannerLogo" json:"banner_logo,omitempty"`
	SponsorLogo                  *uint64               `protobuf:"varint,14,opt,name=sponsor_logo,json=sponsorLogo" json:"sponsor_logo,omitempty"`
	CountryCode                  *string               `protobuf:"bytes,15,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Url                          *string               `protobuf:"bytes,16,opt,name=url" json:"url,omitempty"`
	Fullgamesplayed              *uint32               `protobuf:"varint,17,opt,name=fullgamesplayed" json:"fullgamesplayed,omitempty"`
	Leagues                      []uint32              `protobuf:"varint,18,rep,name=leagues" json:"leagues,omitempty"`
	Gamesplayed                  *uint32               `protobuf:"varint,19,opt,name=gamesplayed" json:"gamesplayed,omitempty"`
	Gamesplayedwithcurrentroster *uint32               `protobuf:"varint,20,opt,name=gamesplayedwithcurrentroster" json:"gamesplayedwithcurrentroster,omitempty"`
	Teammatchmakinggamesplayed   *uint32               `protobuf:"varint,21,opt,name=teammatchmakinggamesplayed" json:"teammatchmakinggamesplayed,omitempty"`
	Lastplayedgametime           *uint32               `protobuf:"varint,22,opt,name=lastplayedgametime" json:"lastplayedgametime,omitempty"`
	Lastrenametime               *uint32               `protobuf:"varint,23,opt,name=lastrenametime" json:"lastrenametime,omitempty"`
	RecentMatchIds               []uint64              `protobuf:"varint,25,rep,name=recent_match_ids,json=recentMatchIds" json:"recent_match_ids,omitempty"`
	TopMatchIds                  []uint64              `protobuf:"varint,26,rep,name=top_match_ids,json=topMatchIds" json:"top_match_ids,omitempty"`
	PickupTeam                   *bool                 `protobuf:"varint,27,opt,name=pickup_team,json=pickupTeam" json:"pickup_team,omitempty"`
	XXX_unrecognized             []byte                `json:"-"`
}

func (m *CMsgDOTATeam) Reset()                    { *m = CMsgDOTATeam{} }
func (m *CMsgDOTATeam) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeam) ProtoMessage()               {}
func (*CMsgDOTATeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CMsgDOTATeam) GetMembers() []*CMsgDOTATeamMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgDOTATeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATeam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTATeam) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTATeam) GetAdminId() uint32 {
	if m != nil && m.AdminId != nil {
		return *m.AdminId
	}
	return 0
}

func (m *CMsgDOTATeam) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTATeam) GetDisbanded() bool {
	if m != nil && m.Disbanded != nil {
		return *m.Disbanded
	}
	return false
}

func (m *CMsgDOTATeam) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTATeam) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTATeam) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgDOTATeam) GetCalibrationGamesRemaining() uint32 {
	if m != nil && m.CalibrationGamesRemaining != nil {
		return *m.CalibrationGamesRemaining
	}
	return 0
}

func (m *CMsgDOTATeam) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTATeam) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTATeam) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTATeam) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTATeam) GetFullgamesplayed() uint32 {
	if m != nil && m.Fullgamesplayed != nil {
		return *m.Fullgamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetLeagues() []uint32 {
	if m != nil {
		return m.Leagues
	}
	return nil
}

func (m *CMsgDOTATeam) GetGamesplayed() uint32 {
	if m != nil && m.Gamesplayed != nil {
		return *m.Gamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetGamesplayedwithcurrentroster() uint32 {
	if m != nil && m.Gamesplayedwithcurrentroster != nil {
		return *m.Gamesplayedwithcurrentroster
	}
	return 0
}

func (m *CMsgDOTATeam) GetTeammatchmakinggamesplayed() uint32 {
	if m != nil && m.Teammatchmakinggamesplayed != nil {
		return *m.Teammatchmakinggamesplayed
	}
	return 0
}

func (m *CMsgDOTATeam) GetLastplayedgametime() uint32 {
	if m != nil && m.Lastplayedgametime != nil {
		return *m.Lastplayedgametime
	}
	return 0
}

func (m *CMsgDOTATeam) GetLastrenametime() uint32 {
	if m != nil && m.Lastrenametime != nil {
		return *m.Lastrenametime
	}
	return 0
}

func (m *CMsgDOTATeam) GetRecentMatchIds() []uint64 {
	if m != nil {
		return m.RecentMatchIds
	}
	return nil
}

func (m *CMsgDOTATeam) GetTopMatchIds() []uint64 {
	if m != nil {
		return m.TopMatchIds
	}
	return nil
}

func (m *CMsgDOTATeam) GetPickupTeam() bool {
	if m != nil && m.PickupTeam != nil {
		return *m.PickupTeam
	}
	return false
}

type CMsgDOTATeamInfo struct {
	Members                   []*CMsgDOTATeamInfo_Member `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
	TeamId                    *uint32                    `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Name                      *string                    `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Tag                       *string                    `protobuf:"bytes,4,opt,name=tag" json:"tag,omitempty"`
	TimeCreated               *uint32                    `protobuf:"varint,5,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	Pro                       *bool                      `protobuf:"varint,6,opt,name=pro" json:"pro,omitempty"`
	Locked                    *bool                      `protobuf:"varint,7,opt,name=locked" json:"locked,omitempty"`
	PickupTeam                *bool                      `protobuf:"varint,8,opt,name=pickup_team,json=pickupTeam" json:"pickup_team,omitempty"`
	UgcLogo                   *uint64                    `protobuf:"varint,9,opt,name=ugc_logo,json=ugcLogo" json:"ugc_logo,omitempty"`
	UgcBaseLogo               *uint64                    `protobuf:"varint,10,opt,name=ugc_base_logo,json=ugcBaseLogo" json:"ugc_base_logo,omitempty"`
	UgcBannerLogo             *uint64                    `protobuf:"varint,11,opt,name=ugc_banner_logo,json=ugcBannerLogo" json:"ugc_banner_logo,omitempty"`
	UgcSponsorLogo            *uint64                    `protobuf:"varint,12,opt,name=ugc_sponsor_logo,json=ugcSponsorLogo" json:"ugc_sponsor_logo,omitempty"`
	CountryCode               *string                    `protobuf:"bytes,13,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Url                       *string                    `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	Wins                      *uint32                    `protobuf:"varint,15,opt,name=wins" json:"wins,omitempty"`
	Losses                    *uint32                    `protobuf:"varint,16,opt,name=losses" json:"losses,omitempty"`
	Rank                      *uint32                    `protobuf:"varint,17,opt,name=rank" json:"rank,omitempty"`
	CalibrationGamesRemaining *uint32                    `protobuf:"varint,18,opt,name=calibration_games_remaining,json=calibrationGamesRemaining" json:"calibration_games_remaining,omitempty"`
	GamesPlayedTotal          *uint32                    `protobuf:"varint,19,opt,name=games_played_total,json=gamesPlayedTotal" json:"games_played_total,omitempty"`
	GamesPlayedMatchmaking    *uint32                    `protobuf:"varint,20,opt,name=games_played_matchmaking,json=gamesPlayedMatchmaking" json:"games_played_matchmaking,omitempty"`
	LeaguesParticipated       []uint32                   `protobuf:"varint,21,rep,name=leagues_participated,json=leaguesParticipated" json:"leagues_participated,omitempty"`
	TopMatchIds               []uint64                   `protobuf:"varint,22,rep,name=top_match_ids,json=topMatchIds" json:"top_match_ids,omitempty"`
	RecentMatchIds            []uint64                   `protobuf:"varint,23,rep,name=recent_match_ids,json=recentMatchIds" json:"recent_match_ids,omitempty"`
	XXX_unrecognized          []byte                     `json:"-"`
}

func (m *CMsgDOTATeamInfo) Reset()                    { *m = CMsgDOTATeamInfo{} }
func (m *CMsgDOTATeamInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInfo) ProtoMessage()               {}
func (*CMsgDOTATeamInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CMsgDOTATeamInfo) GetMembers() []*CMsgDOTATeamInfo_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgDOTATeamInfo) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTATeamInfo) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTATeamInfo) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetPro() bool {
	if m != nil && m.Pro != nil {
		return *m.Pro
	}
	return false
}

func (m *CMsgDOTATeamInfo) GetLocked() bool {
	if m != nil && m.Locked != nil {
		return *m.Locked
	}
	return false
}

func (m *CMsgDOTATeamInfo) GetPickupTeam() bool {
	if m != nil && m.PickupTeam != nil {
		return *m.PickupTeam
	}
	return false
}

func (m *CMsgDOTATeamInfo) GetUgcLogo() uint64 {
	if m != nil && m.UgcLogo != nil {
		return *m.UgcLogo
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetUgcBaseLogo() uint64 {
	if m != nil && m.UgcBaseLogo != nil {
		return *m.UgcBaseLogo
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetUgcBannerLogo() uint64 {
	if m != nil && m.UgcBannerLogo != nil {
		return *m.UgcBannerLogo
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetUgcSponsorLogo() uint64 {
	if m != nil && m.UgcSponsorLogo != nil {
		return *m.UgcSponsorLogo
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTATeamInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTATeamInfo) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetRank() uint32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetCalibrationGamesRemaining() uint32 {
	if m != nil && m.CalibrationGamesRemaining != nil {
		return *m.CalibrationGamesRemaining
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetGamesPlayedTotal() uint32 {
	if m != nil && m.GamesPlayedTotal != nil {
		return *m.GamesPlayedTotal
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetGamesPlayedMatchmaking() uint32 {
	if m != nil && m.GamesPlayedMatchmaking != nil {
		return *m.GamesPlayedMatchmaking
	}
	return 0
}

func (m *CMsgDOTATeamInfo) GetLeaguesParticipated() []uint32 {
	if m != nil {
		return m.LeaguesParticipated
	}
	return nil
}

func (m *CMsgDOTATeamInfo) GetTopMatchIds() []uint64 {
	if m != nil {
		return m.TopMatchIds
	}
	return nil
}

func (m *CMsgDOTATeamInfo) GetRecentMatchIds() []uint64 {
	if m != nil {
		return m.RecentMatchIds
	}
	return nil
}

type CMsgDOTATeamInfo_Member struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TimeJoined       *uint32 `protobuf:"varint,2,opt,name=time_joined,json=timeJoined" json:"time_joined,omitempty"`
	Admin            *bool   `protobuf:"varint,3,opt,name=admin" json:"admin,omitempty"`
	Sub              *bool   `protobuf:"varint,4,opt,name=sub" json:"sub,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamInfo_Member) Reset()                    { *m = CMsgDOTATeamInfo_Member{} }
func (m *CMsgDOTATeamInfo_Member) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInfo_Member) ProtoMessage()               {}
func (*CMsgDOTATeamInfo_Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *CMsgDOTATeamInfo_Member) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamInfo_Member) GetTimeJoined() uint32 {
	if m != nil && m.TimeJoined != nil {
		return *m.TimeJoined
	}
	return 0
}

func (m *CMsgDOTATeamInfo_Member) GetAdmin() bool {
	if m != nil && m.Admin != nil {
		return *m.Admin
	}
	return false
}

func (m *CMsgDOTATeamInfo_Member) GetSub() bool {
	if m != nil && m.Sub != nil {
		return *m.Sub
	}
	return false
}

type CMsgDOTATeamsInfo struct {
	LeagueId         *uint32             `protobuf:"varint,1,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	Teams            []*CMsgDOTATeamInfo `protobuf:"bytes,2,rep,name=teams" json:"teams,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CMsgDOTATeamsInfo) Reset()                    { *m = CMsgDOTATeamsInfo{} }
func (m *CMsgDOTATeamsInfo) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamsInfo) ProtoMessage()               {}
func (*CMsgDOTATeamsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CMsgDOTATeamsInfo) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTATeamsInfo) GetTeams() []*CMsgDOTATeamInfo {
	if m != nil {
		return m.Teams
	}
	return nil
}

type CMsgDOTAMyTeamInfoRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAMyTeamInfoRequest) Reset()                    { *m = CMsgDOTAMyTeamInfoRequest{} }
func (m *CMsgDOTAMyTeamInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAMyTeamInfoRequest) ProtoMessage()               {}
func (*CMsgDOTAMyTeamInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type CMsgDOTACreateTeam struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,3,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,4,opt,name=base_logo,json=baseLogo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,5,opt,name=banner_logo,json=bannerLogo" json:"banner_logo,omitempty"`
	SponsorLogo      *uint64 `protobuf:"varint,6,opt,name=sponsor_logo,json=sponsorLogo" json:"sponsor_logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,7,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Url              *string `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	PickupTeam       *bool   `protobuf:"varint,9,opt,name=pickup_team,json=pickupTeam" json:"pickup_team,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTACreateTeam) Reset()                    { *m = CMsgDOTACreateTeam{} }
func (m *CMsgDOTACreateTeam) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTACreateTeam) ProtoMessage()               {}
func (*CMsgDOTACreateTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CMsgDOTACreateTeam) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTACreateTeam) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTACreateTeam) GetPickupTeam() bool {
	if m != nil && m.PickupTeam != nil {
		return *m.PickupTeam
	}
	return false
}

type CMsgDOTACreateTeamResponse struct {
	Result           *CMsgDOTACreateTeamResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTACreateTeamResponse_Result,def=-1" json:"result,omitempty"`
	TeamId           *uint32                            `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CMsgDOTACreateTeamResponse) Reset()                    { *m = CMsgDOTACreateTeamResponse{} }
func (m *CMsgDOTACreateTeamResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTACreateTeamResponse) ProtoMessage()               {}
func (*CMsgDOTACreateTeamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

const Default_CMsgDOTACreateTeamResponse_Result CMsgDOTACreateTeamResponse_Result = CMsgDOTACreateTeamResponse_INVALID

func (m *CMsgDOTACreateTeamResponse) GetResult() CMsgDOTACreateTeamResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTACreateTeamResponse_Result
}

func (m *CMsgDOTACreateTeamResponse) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAEditTeamDetails struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Tag              *string `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	BaseLogo         *uint64 `protobuf:"varint,5,opt,name=base_logo,json=baseLogo" json:"base_logo,omitempty"`
	BannerLogo       *uint64 `protobuf:"varint,6,opt,name=banner_logo,json=bannerLogo" json:"banner_logo,omitempty"`
	SponsorLogo      *uint64 `protobuf:"varint,7,opt,name=sponsor_logo,json=sponsorLogo" json:"sponsor_logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,8,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Url              *string `protobuf:"bytes,9,opt,name=url" json:"url,omitempty"`
	InUseByParty     *bool   `protobuf:"varint,10,opt,name=in_use_by_party,json=inUseByParty" json:"in_use_by_party,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAEditTeamDetails) Reset()                    { *m = CMsgDOTAEditTeamDetails{} }
func (m *CMsgDOTAEditTeamDetails) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamDetails) ProtoMessage()               {}
func (*CMsgDOTAEditTeamDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CMsgDOTAEditTeamDetails) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAEditTeamDetails) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAEditTeamDetails) GetBaseLogo() uint64 {
	if m != nil && m.BaseLogo != nil {
		return *m.BaseLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamDetails) GetBannerLogo() uint64 {
	if m != nil && m.BannerLogo != nil {
		return *m.BannerLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamDetails) GetSponsorLogo() uint64 {
	if m != nil && m.SponsorLogo != nil {
		return *m.SponsorLogo
	}
	return 0
}

func (m *CMsgDOTAEditTeamDetails) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CMsgDOTAEditTeamDetails) GetInUseByParty() bool {
	if m != nil && m.InUseByParty != nil {
		return *m.InUseByParty
	}
	return false
}

type CMsgDOTAEditTeamDetailsResponse struct {
	Result           *CMsgDOTAEditTeamDetailsResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAEditTeamDetailsResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgDOTAEditTeamDetailsResponse) Reset()         { *m = CMsgDOTAEditTeamDetailsResponse{} }
func (m *CMsgDOTAEditTeamDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditTeamDetailsResponse) ProtoMessage()    {}
func (*CMsgDOTAEditTeamDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10}
}

const Default_CMsgDOTAEditTeamDetailsResponse_Result CMsgDOTAEditTeamDetailsResponse_Result = CMsgDOTAEditTeamDetailsResponse_SUCCESS

func (m *CMsgDOTAEditTeamDetailsResponse) GetResult() CMsgDOTAEditTeamDetailsResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAEditTeamDetailsResponse_Result
}

type CMsgDOTATeamProfileResponse struct {
	Eresult          *uint32       `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	Team             *CMsgDOTATeam `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CMsgDOTATeamProfileResponse) Reset()                    { *m = CMsgDOTATeamProfileResponse{} }
func (m *CMsgDOTATeamProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamProfileResponse) ProtoMessage()               {}
func (*CMsgDOTATeamProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CMsgDOTATeamProfileResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

func (m *CMsgDOTATeamProfileResponse) GetTeam() *CMsgDOTATeam {
	if m != nil {
		return m.Team
	}
	return nil
}

type CMsgDOTAProTeamListRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAProTeamListRequest) Reset()                    { *m = CMsgDOTAProTeamListRequest{} }
func (m *CMsgDOTAProTeamListRequest) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListRequest) ProtoMessage()               {}
func (*CMsgDOTAProTeamListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type CMsgDOTAProTeamListResponse struct {
	Teams            []*CMsgDOTAProTeamListResponse_TeamEntry `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	Eresult          *uint32                                  `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CMsgDOTAProTeamListResponse) Reset()                    { *m = CMsgDOTAProTeamListResponse{} }
func (m *CMsgDOTAProTeamListResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListResponse) ProtoMessage()               {}
func (*CMsgDOTAProTeamListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CMsgDOTAProTeamListResponse) GetTeams() []*CMsgDOTAProTeamListResponse_TeamEntry {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTAProTeamListResponse) GetEresult() uint32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return 0
}

type CMsgDOTAProTeamListResponse_TeamEntry struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	TimeCreated      *uint32 `protobuf:"varint,3,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	CountryCode      *string `protobuf:"bytes,5,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	MemberCount      *uint32 `protobuf:"varint,6,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) Reset()         { *m = CMsgDOTAProTeamListResponse_TeamEntry{} }
func (m *CMsgDOTAProTeamListResponse_TeamEntry) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAProTeamListResponse_TeamEntry) ProtoMessage()    {}
func (*CMsgDOTAProTeamListResponse_TeamEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13, 0}
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTAProTeamListResponse_TeamEntry) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

type CMsgDOTATeamInvite_InviterToGC struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamInvite_InviterToGC) Reset()                    { *m = CMsgDOTATeamInvite_InviterToGC{} }
func (m *CMsgDOTATeamInvite_InviterToGC) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_InviterToGC) ProtoMessage()               {}
func (*CMsgDOTATeamInvite_InviterToGC) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CMsgDOTATeamInvite_InviterToGC) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTATeamInvite_InviterToGC) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATeamInvite_GCImmediateResponseToInviter struct {
	Result             *ETeamInviteResult `protobuf:"varint,1,opt,name=result,enum=ETeamInviteResult,def=0" json:"result,omitempty"`
	InviteeName        *string            `protobuf:"bytes,2,opt,name=invitee_name,json=inviteeName" json:"invitee_name,omitempty"`
	RequiredBadgeLevel *uint32            `protobuf:"varint,3,opt,name=required_badge_level,json=requiredBadgeLevel" json:"required_badge_level,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) Reset() {
	*m = CMsgDOTATeamInvite_GCImmediateResponseToInviter{}
}
func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTATeamInvite_GCImmediateResponseToInviter) ProtoMessage() {}
func (*CMsgDOTATeamInvite_GCImmediateResponseToInviter) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15}
}

const Default_CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result ETeamInviteResult = ETeamInviteResult_TEAM_INVITE_SUCCESS

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetResult() ETeamInviteResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCImmediateResponseToInviter_Result
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCImmediateResponseToInviter) GetRequiredBadgeLevel() uint32 {
	if m != nil && m.RequiredBadgeLevel != nil {
		return *m.RequiredBadgeLevel
	}
	return 0
}

type CMsgDOTATeamInvite_GCRequestToInvitee struct {
	InviterAccountId *uint32 `protobuf:"varint,1,opt,name=inviter_account_id,json=inviterAccountId" json:"inviter_account_id,omitempty"`
	TeamName         *string `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	TeamTag          *string `protobuf:"bytes,3,opt,name=team_tag,json=teamTag" json:"team_tag,omitempty"`
	Logo             *uint64 `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) Reset()         { *m = CMsgDOTATeamInvite_GCRequestToInvitee{} }
func (m *CMsgDOTATeamInvite_GCRequestToInvitee) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCRequestToInvitee) ProtoMessage()    {}
func (*CMsgDOTATeamInvite_GCRequestToInvitee) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16}
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetInviterAccountId() uint32 {
	if m != nil && m.InviterAccountId != nil {
		return *m.InviterAccountId
	}
	return 0
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgDOTATeamInvite_GCRequestToInvitee) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

type CMsgDOTATeamInvite_InviteeResponseToGC struct {
	Result           *ETeamInviteResult `protobuf:"varint,1,opt,name=result,enum=ETeamInviteResult,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgDOTATeamInvite_InviteeResponseToGC) Reset() {
	*m = CMsgDOTATeamInvite_InviteeResponseToGC{}
}
func (m *CMsgDOTATeamInvite_InviteeResponseToGC) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_InviteeResponseToGC) ProtoMessage()    {}
func (*CMsgDOTATeamInvite_InviteeResponseToGC) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

const Default_CMsgDOTATeamInvite_InviteeResponseToGC_Result ETeamInviteResult = ETeamInviteResult_TEAM_INVITE_SUCCESS

func (m *CMsgDOTATeamInvite_InviteeResponseToGC) GetResult() ETeamInviteResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_InviteeResponseToGC_Result
}

type CMsgDOTATeamInvite_GCResponseToInviter struct {
	Result           *ETeamInviteResult `protobuf:"varint,1,opt,name=result,enum=ETeamInviteResult,def=0" json:"result,omitempty"`
	InviteeName      *string            `protobuf:"bytes,2,opt,name=invitee_name,json=inviteeName" json:"invitee_name,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCResponseToInviter) Reset() {
	*m = CMsgDOTATeamInvite_GCResponseToInviter{}
}
func (m *CMsgDOTATeamInvite_GCResponseToInviter) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCResponseToInviter) ProtoMessage()    {}
func (*CMsgDOTATeamInvite_GCResponseToInviter) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

const Default_CMsgDOTATeamInvite_GCResponseToInviter_Result ETeamInviteResult = ETeamInviteResult_TEAM_INVITE_SUCCESS

func (m *CMsgDOTATeamInvite_GCResponseToInviter) GetResult() ETeamInviteResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCResponseToInviter_Result
}

func (m *CMsgDOTATeamInvite_GCResponseToInviter) GetInviteeName() string {
	if m != nil && m.InviteeName != nil {
		return *m.InviteeName
	}
	return ""
}

type CMsgDOTATeamInvite_GCResponseToInvitee struct {
	Result           *ETeamInviteResult `protobuf:"varint,1,opt,name=result,enum=ETeamInviteResult,def=0" json:"result,omitempty"`
	TeamName         *string            `protobuf:"bytes,2,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) Reset() {
	*m = CMsgDOTATeamInvite_GCResponseToInvitee{}
}
func (m *CMsgDOTATeamInvite_GCResponseToInvitee) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATeamInvite_GCResponseToInvitee) ProtoMessage()    {}
func (*CMsgDOTATeamInvite_GCResponseToInvitee) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19}
}

const Default_CMsgDOTATeamInvite_GCResponseToInvitee_Result ETeamInviteResult = ETeamInviteResult_TEAM_INVITE_SUCCESS

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) GetResult() ETeamInviteResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATeamInvite_GCResponseToInvitee_Result
}

func (m *CMsgDOTATeamInvite_GCResponseToInvitee) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

type CMsgDOTAKickTeamMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	TeamId           *uint32 `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAKickTeamMember) Reset()                    { *m = CMsgDOTAKickTeamMember{} }
func (m *CMsgDOTAKickTeamMember) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAKickTeamMember) ProtoMessage()               {}
func (*CMsgDOTAKickTeamMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CMsgDOTAKickTeamMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAKickTeamMember) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTAKickTeamMemberResponse struct {
	Result           *CMsgDOTAKickTeamMemberResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAKickTeamMemberResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CMsgDOTAKickTeamMemberResponse) Reset()                    { *m = CMsgDOTAKickTeamMemberResponse{} }
func (m *CMsgDOTAKickTeamMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAKickTeamMemberResponse) ProtoMessage()               {}
func (*CMsgDOTAKickTeamMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

const Default_CMsgDOTAKickTeamMemberResponse_Result CMsgDOTAKickTeamMemberResponse_Result = CMsgDOTAKickTeamMemberResponse_SUCCESS

func (m *CMsgDOTAKickTeamMemberResponse) GetResult() CMsgDOTAKickTeamMemberResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAKickTeamMemberResponse_Result
}

type CMsgDOTATransferTeamAdmin struct {
	NewAdminAccountId *uint32 `protobuf:"varint,1,opt,name=new_admin_account_id,json=newAdminAccountId" json:"new_admin_account_id,omitempty"`
	TeamId            *uint32 `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CMsgDOTATransferTeamAdmin) Reset()                    { *m = CMsgDOTATransferTeamAdmin{} }
func (m *CMsgDOTATransferTeamAdmin) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTATransferTeamAdmin) ProtoMessage()               {}
func (*CMsgDOTATransferTeamAdmin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CMsgDOTATransferTeamAdmin) GetNewAdminAccountId() uint32 {
	if m != nil && m.NewAdminAccountId != nil {
		return *m.NewAdminAccountId
	}
	return 0
}

func (m *CMsgDOTATransferTeamAdmin) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTATransferTeamAdminResponse struct {
	Result           *CMsgDOTATransferTeamAdminResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTATransferTeamAdminResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgDOTATransferTeamAdminResponse) Reset()         { *m = CMsgDOTATransferTeamAdminResponse{} }
func (m *CMsgDOTATransferTeamAdminResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATransferTeamAdminResponse) ProtoMessage()    {}
func (*CMsgDOTATransferTeamAdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23}
}

const Default_CMsgDOTATransferTeamAdminResponse_Result CMsgDOTATransferTeamAdminResponse_Result = CMsgDOTATransferTeamAdminResponse_SUCCESS

func (m *CMsgDOTATransferTeamAdminResponse) GetResult() CMsgDOTATransferTeamAdminResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATransferTeamAdminResponse_Result
}

type CMsgDOTAChangeTeamSub struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	MemberAccountId  *uint32 `protobuf:"varint,2,opt,name=member_account_id,json=memberAccountId" json:"member_account_id,omitempty"`
	SubAccountId     *uint32 `protobuf:"varint,3,opt,name=sub_account_id,json=subAccountId" json:"sub_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChangeTeamSub) Reset()                    { *m = CMsgDOTAChangeTeamSub{} }
func (m *CMsgDOTAChangeTeamSub) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChangeTeamSub) ProtoMessage()               {}
func (*CMsgDOTAChangeTeamSub) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CMsgDOTAChangeTeamSub) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTAChangeTeamSub) GetMemberAccountId() uint32 {
	if m != nil && m.MemberAccountId != nil {
		return *m.MemberAccountId
	}
	return 0
}

func (m *CMsgDOTAChangeTeamSub) GetSubAccountId() uint32 {
	if m != nil && m.SubAccountId != nil {
		return *m.SubAccountId
	}
	return 0
}

type CMsgDOTAChangeTeamSubResponse struct {
	Result           *CMsgDOTAChangeTeamSubResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAChangeTeamSubResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *CMsgDOTAChangeTeamSubResponse) Reset()                    { *m = CMsgDOTAChangeTeamSubResponse{} }
func (m *CMsgDOTAChangeTeamSubResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChangeTeamSubResponse) ProtoMessage()               {}
func (*CMsgDOTAChangeTeamSubResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

const Default_CMsgDOTAChangeTeamSubResponse_Result CMsgDOTAChangeTeamSubResponse_Result = CMsgDOTAChangeTeamSubResponse_SUCCESS

func (m *CMsgDOTAChangeTeamSubResponse) GetResult() CMsgDOTAChangeTeamSubResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAChangeTeamSubResponse_Result
}

type CMsgDOTALeaveTeam struct {
	TeamId           *uint32 `protobuf:"varint,1,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeaveTeam) Reset()                    { *m = CMsgDOTALeaveTeam{} }
func (m *CMsgDOTALeaveTeam) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveTeam) ProtoMessage()               {}
func (*CMsgDOTALeaveTeam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CMsgDOTALeaveTeam) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type CMsgDOTALeaveTeamResponse struct {
	Result           *CMsgDOTALeaveTeamResponse_Result `protobuf:"varint,1,opt,name=result,enum=CMsgDOTALeaveTeamResponse_Result,def=0" json:"result,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CMsgDOTALeaveTeamResponse) Reset()                    { *m = CMsgDOTALeaveTeamResponse{} }
func (m *CMsgDOTALeaveTeamResponse) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveTeamResponse) ProtoMessage()               {}
func (*CMsgDOTALeaveTeamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

const Default_CMsgDOTALeaveTeamResponse_Result CMsgDOTALeaveTeamResponse_Result = CMsgDOTALeaveTeamResponse_SUCCESS

func (m *CMsgDOTALeaveTeamResponse) GetResult() CMsgDOTALeaveTeamResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTALeaveTeamResponse_Result
}

type CMsgDOTABetaParticipation struct {
	AccessRights     *uint32 `protobuf:"varint,1,opt,name=access_rights,json=accessRights" json:"access_rights,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTABetaParticipation) Reset()                    { *m = CMsgDOTABetaParticipation{} }
func (m *CMsgDOTABetaParticipation) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTABetaParticipation) ProtoMessage()               {}
func (*CMsgDOTABetaParticipation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CMsgDOTABetaParticipation) GetAccessRights() uint32 {
	if m != nil && m.AccessRights != nil {
		return *m.AccessRights
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgDOTATeamMemberSDO)(nil), "CMsgDOTATeamMemberSDO")
	proto.RegisterType((*CMsgDOTATeamAdminSDO)(nil), "CMsgDOTATeamAdminSDO")
	proto.RegisterType((*CMsgDOTATeamMember)(nil), "CMsgDOTATeamMember")
	proto.RegisterType((*CMsgDOTATeam)(nil), "CMsgDOTATeam")
	proto.RegisterType((*CMsgDOTATeamInfo)(nil), "CMsgDOTATeamInfo")
	proto.RegisterType((*CMsgDOTATeamInfo_Member)(nil), "CMsgDOTATeamInfo.Member")
	proto.RegisterType((*CMsgDOTATeamsInfo)(nil), "CMsgDOTATeamsInfo")
	proto.RegisterType((*CMsgDOTAMyTeamInfoRequest)(nil), "CMsgDOTAMyTeamInfoRequest")
	proto.RegisterType((*CMsgDOTACreateTeam)(nil), "CMsgDOTACreateTeam")
	proto.RegisterType((*CMsgDOTACreateTeamResponse)(nil), "CMsgDOTACreateTeamResponse")
	proto.RegisterType((*CMsgDOTAEditTeamDetails)(nil), "CMsgDOTAEditTeamDetails")
	proto.RegisterType((*CMsgDOTAEditTeamDetailsResponse)(nil), "CMsgDOTAEditTeamDetailsResponse")
	proto.RegisterType((*CMsgDOTATeamProfileResponse)(nil), "CMsgDOTATeamProfileResponse")
	proto.RegisterType((*CMsgDOTAProTeamListRequest)(nil), "CMsgDOTAProTeamListRequest")
	proto.RegisterType((*CMsgDOTAProTeamListResponse)(nil), "CMsgDOTAProTeamListResponse")
	proto.RegisterType((*CMsgDOTAProTeamListResponse_TeamEntry)(nil), "CMsgDOTAProTeamListResponse.TeamEntry")
	proto.RegisterType((*CMsgDOTATeamInvite_InviterToGC)(nil), "CMsgDOTATeamInvite_InviterToGC")
	proto.RegisterType((*CMsgDOTATeamInvite_GCImmediateResponseToInviter)(nil), "CMsgDOTATeamInvite_GCImmediateResponseToInviter")
	proto.RegisterType((*CMsgDOTATeamInvite_GCRequestToInvitee)(nil), "CMsgDOTATeamInvite_GCRequestToInvitee")
	proto.RegisterType((*CMsgDOTATeamInvite_InviteeResponseToGC)(nil), "CMsgDOTATeamInvite_InviteeResponseToGC")
	proto.RegisterType((*CMsgDOTATeamInvite_GCResponseToInviter)(nil), "CMsgDOTATeamInvite_GCResponseToInviter")
	proto.RegisterType((*CMsgDOTATeamInvite_GCResponseToInvitee)(nil), "CMsgDOTATeamInvite_GCResponseToInvitee")
	proto.RegisterType((*CMsgDOTAKickTeamMember)(nil), "CMsgDOTAKickTeamMember")
	proto.RegisterType((*CMsgDOTAKickTeamMemberResponse)(nil), "CMsgDOTAKickTeamMemberResponse")
	proto.RegisterType((*CMsgDOTATransferTeamAdmin)(nil), "CMsgDOTATransferTeamAdmin")
	proto.RegisterType((*CMsgDOTATransferTeamAdminResponse)(nil), "CMsgDOTATransferTeamAdminResponse")
	proto.RegisterType((*CMsgDOTAChangeTeamSub)(nil), "CMsgDOTAChangeTeamSub")
	proto.RegisterType((*CMsgDOTAChangeTeamSubResponse)(nil), "CMsgDOTAChangeTeamSubResponse")
	proto.RegisterType((*CMsgDOTALeaveTeam)(nil), "CMsgDOTALeaveTeam")
	proto.RegisterType((*CMsgDOTALeaveTeamResponse)(nil), "CMsgDOTALeaveTeamResponse")
	proto.RegisterType((*CMsgDOTABetaParticipation)(nil), "CMsgDOTABetaParticipation")
	proto.RegisterEnum("ETeamInviteResult", ETeamInviteResult_name, ETeamInviteResult_value)
	proto.RegisterEnum("CMsgDOTACreateTeamResponse_Result", CMsgDOTACreateTeamResponse_Result_name, CMsgDOTACreateTeamResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAEditTeamDetailsResponse_Result", CMsgDOTAEditTeamDetailsResponse_Result_name, CMsgDOTAEditTeamDetailsResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAKickTeamMemberResponse_Result", CMsgDOTAKickTeamMemberResponse_Result_name, CMsgDOTAKickTeamMemberResponse_Result_value)
	proto.RegisterEnum("CMsgDOTATransferTeamAdminResponse_Result", CMsgDOTATransferTeamAdminResponse_Result_name, CMsgDOTATransferTeamAdminResponse_Result_value)
	proto.RegisterEnum("CMsgDOTAChangeTeamSubResponse_Result", CMsgDOTAChangeTeamSubResponse_Result_name, CMsgDOTAChangeTeamSubResponse_Result_value)
	proto.RegisterEnum("CMsgDOTALeaveTeamResponse_Result", CMsgDOTALeaveTeamResponse_Result_name, CMsgDOTALeaveTeamResponse_Result_value)
}

func init() { proto.RegisterFile("dota_gcmessages_client_team.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcd, 0x73, 0xdb, 0x5a,
	0x15, 0xaf, 0xfc, 0x11, 0xdb, 0xc7, 0x71, 0x22, 0xdf, 0xa4, 0xa9, 0x9a, 0xf4, 0x23, 0xd1, 0xa3,
	0x69, 0x28, 0xc5, 0xef, 0x91, 0x15, 0xc3, 0x30, 0x0f, 0x64, 0x59, 0x4d, 0xd5, 0xfa, 0x6b, 0x64,
	0xb9, 0x10, 0x36, 0x1a, 0xd9, 0xbe, 0x75, 0x45, 0x6d, 0xc9, 0x4f, 0x92, 0xdb, 0xc9, 0x8e, 0x61,
	0x06, 0xd8, 0xb0, 0x61, 0x86, 0x05, 0x3b, 0x86, 0x15, 0xc3, 0xc7, 0xee, 0x2d, 0xf8, 0x0f, 0x60,
	0xc5, 0x3f, 0xc0, 0xff, 0xc1, 0x1a, 0xe6, 0xde, 0x2b, 0x59, 0xb2, 0x2d, 0xd9, 0x9d, 0x96, 0x19,
	0xb2, 0x89, 0xef, 0x39, 0xbf, 0x73, 0xef, 0x3d, 0x1f, 0xbf, 0x73, 0x24, 0xc1, 0xd9, 0xc8, 0xf1,
	0x4d, 0x63, 0x3c, 0x9c, 0x62, 0xcf, 0x33, 0xc7, 0xd8, 0x33, 0x86, 0x13, 0x0b, 0xdb, 0xbe, 0xe1,
	0x63, 0x73, 0x5a, 0x9b, 0xb9, 0x8e, 0xef, 0x88, 0x37, 0x70, 0x5b, 0x6e, 0x79, 0xe3, 0x46, 0x47,
	0x97, 0x74, 0x6c, 0x4e, 0x5b, 0x78, 0x3a, 0xc0, 0x6e, 0xaf, 0xd1, 0x41, 0xf7, 0x01, 0xcc, 0xe1,
	0xd0, 0x99, 0xdb, 0xbe, 0x61, 0x8d, 0x04, 0xee, 0x94, 0xbb, 0xa8, 0x68, 0xa5, 0x40, 0xa2, 0x8e,
	0xd0, 0x5d, 0x28, 0x92, 0x5d, 0x0c, 0x6b, 0xe4, 0x09, 0x99, 0xd3, 0xec, 0x45, 0x45, 0x2b, 0x90,
	0xb5, 0x3a, 0xf2, 0xd0, 0x39, 0xec, 0xcf, 0x5c, 0xe7, 0xb5, 0x35, 0xc1, 0x46, 0x00, 0x11, 0xb2,
	0xd4, 0xbc, 0x12, 0x88, 0x75, 0x0a, 0x14, 0xbb, 0x70, 0x18, 0x3f, 0x5a, 0x1a, 0x4d, 0x2d, 0xfb,
	0x93, 0x4e, 0x16, 0x75, 0x40, 0xeb, 0xce, 0x6c, 0xdb, 0xef, 0x21, 0x94, 0x7d, 0x6b, 0x8a, 0x8d,
	0x9f, 0x3a, 0x96, 0x8d, 0x47, 0x42, 0x8e, 0xea, 0x81, 0x88, 0x5e, 0x50, 0x89, 0xf8, 0x75, 0x01,
	0x76, 0xe3, 0xdb, 0xa2, 0x6f, 0x43, 0x61, 0x4a, 0xb7, 0xf6, 0x04, 0xee, 0x34, 0x7b, 0x51, 0xbe,
	0x3c, 0xa8, 0xad, 0x1f, 0xab, 0x85, 0x18, 0x74, 0x07, 0x0a, 0x61, 0x1c, 0x32, 0x74, 0xf3, 0x1d,
	0x76, 0x5f, 0x84, 0x20, 0x67, 0x9b, 0x53, 0x4c, 0xa3, 0x53, 0xd2, 0xe8, 0x6f, 0xc4, 0x43, 0xd6,
	0x37, 0xc7, 0xf4, 0x16, 0x25, 0x8d, 0xfc, 0x24, 0xfe, 0x9a, 0x24, 0x34, 0xc4, 0x3e, 0x4f, 0xed,
	0x0b, 0x74, 0xad, 0x8e, 0xd0, 0x19, 0xec, 0xd2, 0xab, 0x0f, 0x5d, 0x6c, 0xfa, 0x78, 0x24, 0xec,
	0x50, 0x35, 0x75, 0x47, 0x66, 0x22, 0x74, 0x0f, 0x4a, 0x23, 0xcb, 0x1b, 0x98, 0xf6, 0x08, 0x8f,
	0x84, 0xc2, 0x29, 0x77, 0x51, 0xd4, 0x22, 0x01, 0xb9, 0xc1, 0x7b, 0xcb, 0xf6, 0x84, 0x22, 0x35,
	0xa4, 0xbf, 0xd1, 0x11, 0xec, 0x4c, 0x1c, 0xcf, 0xc3, 0x9e, 0x50, 0x62, 0xb7, 0x65, 0x2b, 0x82,
	0x75, 0x4d, 0xfb, 0xad, 0x00, 0x0c, 0x4b, 0x7e, 0xa3, 0x2f, 0xe1, 0x64, 0x68, 0x4e, 0xac, 0x81,
	0x6b, 0xfa, 0x96, 0x63, 0x1b, 0x63, 0x73, 0x8a, 0x3d, 0xc3, 0xc5, 0x53, 0xd3, 0xb2, 0x2d, 0x7b,
	0x2c, 0x08, 0x14, 0x7a, 0x37, 0x06, 0xb9, 0x22, 0x08, 0x2d, 0x04, 0x90, 0x3d, 0x27, 0xce, 0xd8,
	0x11, 0xca, 0xa7, 0xdc, 0x45, 0x4e, 0xa3, 0xbf, 0xd1, 0x09, 0x94, 0x06, 0xa6, 0x87, 0x0d, 0xaa,
	0xd8, 0xa5, 0x8a, 0x22, 0x11, 0x34, 0x89, 0xf2, 0x21, 0x94, 0x07, 0xa6, 0x6d, 0x63, 0x97, 0xa9,
	0x2b, 0x54, 0x0d, 0x4c, 0x44, 0x01, 0x67, 0xb0, 0xeb, 0xcd, 0x1c, 0xdb, 0x73, 0x02, 0xc4, 0x1e,
	0x45, 0x94, 0x03, 0x59, 0x08, 0xa1, 0xb9, 0x77, 0x6f, 0x8c, 0xa1, 0x33, 0xc2, 0xc2, 0x3e, 0x8d,
	0x75, 0x39, 0x90, 0xc9, 0xce, 0x88, 0x66, 0x61, 0xee, 0x4e, 0x04, 0x9e, 0x65, 0x61, 0xee, 0x4e,
	0xd0, 0x05, 0xec, 0xbf, 0x9e, 0x4f, 0x26, 0xd4, 0xc3, 0xd9, 0xc4, 0xbc, 0xc1, 0x23, 0xa1, 0x4a,
	0xbd, 0x5b, 0x15, 0x23, 0x01, 0x0a, 0x13, 0x6c, 0x8e, 0xe7, 0xd8, 0x13, 0x10, 0x2b, 0xcf, 0x60,
	0x89, 0x4e, 0xa1, 0x1c, 0xb7, 0x3f, 0x60, 0xd9, 0x8a, 0xdb, 0xd6, 0xe1, 0x5e, 0x6c, 0xf9, 0xde,
	0xf2, 0xdf, 0x0c, 0xe7, 0xae, 0x8b, 0x6d, 0xdf, 0x75, 0x3c, 0x1f, 0xbb, 0xc2, 0x21, 0x35, 0xd9,
	0x88, 0x41, 0x5f, 0xc2, 0x31, 0xa9, 0xaf, 0xa9, 0xe9, 0x0f, 0xdf, 0x4c, 0xcd, 0xb7, 0x96, 0x3d,
	0x8e, 0x1f, 0x7a, 0x9b, 0xee, 0xb0, 0x01, 0x81, 0x6a, 0x80, 0x26, 0xa6, 0xe7, 0xb3, 0x15, 0x51,
	0x90, 0x72, 0x12, 0x8e, 0xa8, 0x5d, 0x82, 0x06, 0x9d, 0xc3, 0x1e, 0x91, 0xba, 0xd8, 0x0e, 0xb1,
	0x77, 0x28, 0x76, 0x45, 0x8a, 0x2e, 0x80, 0x77, 0xf1, 0x90, 0xb4, 0x1f, 0x7a, 0x30, 0xe5, 0xef,
	0xdd, 0xd3, 0xec, 0x45, 0x4e, 0xdb, 0x63, 0xf2, 0x16, 0x11, 0x93, 0x06, 0x22, 0x42, 0xc5, 0x77,
	0x66, 0x31, 0xd8, 0x31, 0x85, 0x95, 0x7d, 0x67, 0xb6, 0xc0, 0x3c, 0x84, 0xf2, 0xcc, 0x1a, 0xbe,
	0x9d, 0xcf, 0x68, 0x8f, 0x11, 0x4e, 0x68, 0x65, 0x03, 0x13, 0x11, 0x12, 0x8a, 0xbf, 0x2d, 0x00,
	0x1f, 0x67, 0xa5, 0x6a, 0xbf, 0x76, 0xd0, 0xe5, 0x2a, 0x73, 0x85, 0xda, 0x2a, 0xa6, 0xf6, 0x3f,
	0xa6, 0xef, 0x2a, 0x47, 0xf3, 0xeb, 0x1c, 0xe5, 0x21, 0x3b, 0x73, 0x1d, 0xca, 0xde, 0xa2, 0x46,
	0x7e, 0x32, 0x0e, 0x0e, 0xdf, 0x2e, 0x28, 0x1b, 0xac, 0x56, 0xbd, 0x2e, 0xae, 0x7a, 0x4d, 0x9a,
	0xc5, 0x7c, 0x3c, 0x64, 0xa5, 0x5f, 0xa2, 0xa5, 0x5f, 0x98, 0x8f, 0x87, 0xb4, 0xec, 0x45, 0xa8,
	0x10, 0x55, 0xc4, 0x2d, 0x60, 0xd4, 0x98, 0x8f, 0x87, 0xf5, 0x90, 0x5e, 0xe7, 0xb0, 0xcf, 0x30,
	0x11, 0xc5, 0x18, 0x35, 0x2b, 0x14, 0xb5, 0x60, 0xd9, 0x05, 0xf0, 0x04, 0xb7, 0xc4, 0x34, 0x46,
	0xd5, 0xbd, 0xf9, 0x78, 0xd8, 0xdb, 0x40, 0xb6, 0x4a, 0x2a, 0xd9, 0xf6, 0x22, 0xb2, 0x85, 0x6d,
	0x69, 0x3f, 0xb1, 0x2d, 0xf1, 0x89, 0x6d, 0xa9, 0xfa, 0xe1, 0x6d, 0x09, 0x6d, 0x6b, 0x4b, 0x4f,
	0x01, 0x31, 0x1b, 0x56, 0xea, 0x86, 0xef, 0xf8, 0xe6, 0x24, 0xe0, 0x2b, 0x4f, 0x35, 0x5d, 0xaa,
	0xd0, 0x89, 0x1c, 0x7d, 0x17, 0x84, 0x25, 0x74, 0x8c, 0x57, 0x01, 0x61, 0x8f, 0x62, 0x36, 0xad,
	0x48, 0x8b, 0xbe, 0x03, 0x87, 0x41, 0x6f, 0x30, 0x66, 0xa6, 0xeb, 0x5b, 0x43, 0x6b, 0x46, 0x6b,
	0xe4, 0x36, 0xed, 0x1b, 0x07, 0x81, 0xae, 0x1b, 0x53, 0xad, 0x73, 0xe3, 0x68, 0x9d, 0x1b, 0x49,
	0x4c, 0xbb, 0x93, 0xc4, 0xb4, 0xe3, 0x19, 0xec, 0x7c, 0xd4, 0x90, 0xcc, 0xac, 0x0e, 0x49, 0x74,
	0x08, 0x79, 0x3a, 0x95, 0x28, 0x1b, 0x8a, 0x1a, 0x5b, 0x90, 0xd4, 0x7a, 0xf3, 0x01, 0xa5, 0x43,
	0x51, 0x23, 0x3f, 0xc5, 0x6b, 0xa8, 0xc6, 0x19, 0xe7, 0x51, 0x5a, 0x9e, 0x40, 0x89, 0xf9, 0x1a,
	0x9d, 0x5d, 0x64, 0x02, 0x75, 0x84, 0x1e, 0x43, 0x9e, 0x14, 0x3b, 0x1b, 0xf6, 0xe5, 0xcb, 0xea,
	0x1a, 0x63, 0x35, 0xa6, 0x17, 0x4f, 0xe0, 0x6e, 0xa8, 0x6a, 0xdd, 0x2c, 0x94, 0xf8, 0xab, 0x39,
	0xf6, 0x7c, 0xf1, 0x17, 0x99, 0xe8, 0xd9, 0x80, 0xf1, 0x8e, 0xf2, 0x25, 0xe4, 0x30, 0xb7, 0xce,
	0xe1, 0x4c, 0xc4, 0xe1, 0x70, 0x4c, 0x65, 0xd3, 0xc6, 0x54, 0x6e, 0xf3, 0x98, 0xca, 0x6f, 0x1d,
	0x53, 0x3b, 0xdb, 0xc7, 0x54, 0x21, 0x95, 0x39, 0xc5, 0x88, 0x39, 0x2b, 0x0d, 0xa2, 0xb4, 0xd6,
	0x16, 0xff, 0x98, 0x83, 0xe3, 0xf5, 0x38, 0x68, 0x98, 0x9e, 0x8c, 0x91, 0x0c, 0x3b, 0x2e, 0xf6,
	0xe6, 0x13, 0x9f, 0x46, 0x64, 0xef, 0x52, 0xac, 0xa5, 0x83, 0x6b, 0x1a, 0x45, 0x7e, 0xaf, 0xa0,
	0xb6, 0x5f, 0x49, 0x4d, 0xb5, 0xa1, 0x05, 0xa6, 0xa9, 0x1d, 0x53, 0xfc, 0x73, 0x16, 0x76, 0x98,
	0x11, 0x3a, 0x84, 0xd0, 0x8c, 0xff, 0x4f, 0xf8, 0xc7, 0xa1, 0x32, 0x14, 0x7a, 0x7d, 0x59, 0x56,
	0x7a, 0x3d, 0xfe, 0x16, 0xda, 0x03, 0x68, 0x4b, 0x2d, 0xc5, 0x50, 0x5a, 0x5d, 0xfd, 0x9a, 0xe7,
	0xd0, 0x1d, 0x38, 0xa0, 0xeb, 0xba, 0xd4, 0x30, 0xe4, 0xe7, 0x92, 0x26, 0xc9, 0xba, 0xa2, 0xf5,
	0xf8, 0xcc, 0x02, 0xa8, 0x4b, 0x2f, 0x95, 0x36, 0x9f, 0x45, 0x55, 0xa8, 0xb0, 0x75, 0xa7, 0x63,
	0x34, 0x3b, 0xed, 0x2b, 0x3e, 0x87, 0x2a, 0x50, 0xd2, 0xa5, 0xab, 0x60, 0xab, 0x3c, 0x3a, 0x02,
	0x44, 0x96, 0x2b, 0x3b, 0xed, 0x84, 0x30, 0xb6, 0x51, 0x01, 0xf1, 0xb0, 0x4b, 0x97, 0xe1, 0x3e,
	0x45, 0x22, 0x91, 0x35, 0x45, 0xd2, 0x3b, 0x9a, 0x51, 0xef, 0xf7, 0xae, 0xf9, 0x12, 0xba, 0x0d,
	0xd5, 0x7e, 0xbb, 0xd7, 0x55, 0x64, 0xf5, 0x99, 0xaa, 0x34, 0x0c, 0x45, 0xd3, 0x3a, 0x1a, 0x0f,
	0xe8, 0x01, 0x1c, 0x87, 0x40, 0x5d, 0x91, 0x5a, 0x46, 0x53, 0x6d, 0xa9, 0xba, 0xa1, 0x29, 0x92,
	0xfc, 0x5c, 0x69, 0xf0, 0x65, 0xe2, 0x69, 0x9b, 0xec, 0x7a, 0xd5, 0xe1, 0x77, 0x91, 0x08, 0x0f,
	0x96, 0xc0, 0x74, 0xa1, 0x76, 0xda, 0x86, 0xdc, 0xe9, 0x34, 0x1b, 0x9d, 0x1f, 0xb5, 0xf9, 0x0a,
	0xb9, 0x32, 0x41, 0x1b, 0xfd, 0x6e, 0xb3, 0x23, 0x35, 0x8c, 0x67, 0x92, 0xda, 0x54, 0x1a, 0xfc,
	0x1e, 0xba, 0x0f, 0x77, 0xa9, 0xb3, 0xf2, 0x73, 0xa9, 0x7d, 0xa5, 0x34, 0xe8, 0x65, 0x35, 0x45,
	0x56, 0xda, 0x7a, 0xf3, 0x9a, 0xdf, 0x8f, 0xdf, 0x43, 0x6d, 0xf7, 0xfa, 0xcf, 0x9e, 0xa9, 0xb2,
	0xaa, 0xb4, 0x75, 0xa3, 0xa9, 0xbc, 0x52, 0x9a, 0x3c, 0x8f, 0x04, 0x38, 0x0c, 0xf2, 0x60, 0x48,
	0xb2, 0xdc, 0xe9, 0xb7, 0x75, 0x43, 0xbf, 0xee, 0x2a, 0x7c, 0x55, 0xfc, 0x53, 0x06, 0xee, 0x84,
	0xc9, 0x57, 0x46, 0x96, 0x4f, 0x52, 0xdf, 0xc0, 0xbe, 0x69, 0x4d, 0x96, 0x66, 0x22, 0x97, 0x38,
	0x13, 0x33, 0xeb, 0x7c, 0xca, 0xae, 0xf3, 0x29, 0x97, 0xc6, 0xa7, 0xfc, 0x66, 0x3e, 0xed, 0x6c,
	0xe5, 0x53, 0x61, 0x3b, 0x9f, 0x8a, 0xa9, 0x7c, 0x2a, 0x45, 0x7c, 0x7a, 0x04, 0xfb, 0x96, 0x6d,
	0xcc, 0x3d, 0x6c, 0x0c, 0x6e, 0x68, 0x8f, 0xbe, 0xa1, 0x63, 0xb3, 0xa8, 0xed, 0x5a, 0x76, 0xdf,
	0xc3, 0xf5, 0x1b, 0xd2, 0x9c, 0x6f, 0xc4, 0x7f, 0x73, 0xf0, 0x30, 0x25, 0x56, 0x0b, 0x6a, 0x3d,
	0x5f, 0xa1, 0xd6, 0xe3, 0xda, 0x16, 0x8b, 0x05, 0xbf, 0x02, 0x4a, 0x84, 0xfc, 0x12, 0x7f, 0xc5,
	0x2d, 0x68, 0xb4, 0x44, 0x98, 0x53, 0xb8, 0x47, 0xca, 0xa2, 0xaf, 0x29, 0x46, 0x62, 0x4e, 0x39,
	0x52, 0x44, 0x21, 0xa2, 0xdd, 0xd1, 0x8d, 0x96, 0xd2, 0xaa, 0x2b, 0x1a, 0x9f, 0x21, 0xd4, 0x0a,
	0xe5, 0xac, 0x5a, 0x3b, 0xf2, 0x4b, 0xa5, 0xc1, 0x67, 0x49, 0x75, 0x85, 0x8a, 0xf5, 0x2a, 0xcf,
	0x89, 0x3f, 0x81, 0x93, 0x78, 0x37, 0xee, 0xb2, 0xf7, 0xbb, 0x85, 0xcb, 0x02, 0x14, 0x70, 0xcc,
	0xe7, 0x8a, 0x16, 0x2e, 0xd1, 0x19, 0xe4, 0x68, 0x83, 0x22, 0x75, 0x52, 0xbe, 0xac, 0x2c, 0xf5,
	0x74, 0x8d, 0xaa, 0xc4, 0x7b, 0x51, 0xa3, 0xea, 0xba, 0x0e, 0x51, 0x34, 0x2d, 0xcf, 0x0f, 0xfb,
	0xf9, 0x5f, 0x32, 0xd1, 0xd1, 0x4b, 0xea, 0xe0, 0xe8, 0xef, 0x87, 0x53, 0x83, 0x3d, 0xe7, 0x9d,
	0xd7, 0x36, 0x80, 0x6b, 0x44, 0xa0, 0x90, 0x2a, 0x08, 0x46, 0x49, 0xfc, 0xe2, 0x99, 0xa5, 0x8b,
	0x1f, 0x7f, 0xcd, 0x41, 0x69, 0x01, 0x4f, 0xe7, 0xc1, 0xfa, 0x0c, 0x59, 0x7d, 0x0e, 0xcc, 0xae,
	0x3f, 0x07, 0x26, 0xd1, 0x62, 0xb5, 0x6a, 0xf3, 0xeb, 0x55, 0x7b, 0x06, 0xbb, 0xec, 0x59, 0xd5,
	0xa0, 0xd2, 0xf0, 0x2d, 0x90, 0xc9, 0x64, 0x22, 0x12, 0x7f, 0x0c, 0x0f, 0x96, 0xa7, 0xe6, 0x3b,
	0xcb, 0xc7, 0x06, 0xfb, 0xe7, 0xea, 0xce, 0x95, 0xbc, 0x6d, 0xfe, 0xa7, 0xb6, 0xf4, 0x7f, 0x70,
	0xf0, 0x79, 0xc2, 0xd6, 0x57, 0xb2, 0x3a, 0x9d, 0xe2, 0x91, 0x65, 0xfa, 0x8b, 0x6a, 0xd0, 0x9d,
	0xe0, 0x3c, 0xf4, 0x83, 0x15, 0x26, 0xa0, 0x9a, 0x12, 0x99, 0x06, 0x45, 0x7f, 0x40, 0xeb, 0x50,
	0x6d, 0xbf, 0x52, 0x75, 0xc5, 0x58, 0x21, 0x00, 0xf1, 0xd8, 0xa2, 0x60, 0x6c, 0xc4, 0xba, 0x4d,
	0x39, 0x90, 0xb5, 0x49, 0xd3, 0xf9, 0x02, 0x0e, 0x5d, 0xfc, 0xd5, 0xdc, 0x72, 0xf1, 0xc8, 0x18,
	0x98, 0xa3, 0x31, 0x36, 0x26, 0xf8, 0x1d, 0x9e, 0x04, 0x61, 0x47, 0xa1, 0xae, 0x4e, 0x54, 0x4d,
	0xa2, 0x11, 0xff, 0xc0, 0xc1, 0xa3, 0x44, 0x4f, 0x82, 0x92, 0x0b, 0xef, 0x8f, 0xc9, 0xe3, 0x21,
	0x3b, 0xca, 0x35, 0xd6, 0x62, 0xc6, 0x07, 0x1a, 0x69, 0x11, 0xba, 0x13, 0x28, 0xd1, 0xd0, 0xc5,
	0x6e, 0x4a, 0x3f, 0x60, 0xd0, 0x6b, 0x86, 0x1f, 0x33, 0xa2, 0x06, 0x49, 0xe3, 0xac, 0x27, 0x37,
	0x49, 0xd1, 0x82, 0xf3, 0xd4, 0x3c, 0xc6, 0x02, 0x7d, 0x25, 0x7f, 0x72, 0x8c, 0xc5, 0x5f, 0x73,
	0x89, 0x67, 0x91, 0x70, 0xfc, 0x1f, 0xf2, 0x29, 0xfe, 0xf2, 0x43, 0xaf, 0x83, 0x3f, 0xfd, 0x3a,
	0x9b, 0x32, 0x26, 0x76, 0xe1, 0x28, 0xbc, 0xc7, 0x4b, 0x6b, 0xf8, 0xf6, 0xc3, 0xbf, 0x33, 0xa5,
	0x52, 0xe8, 0x77, 0x99, 0x88, 0x9d, 0xcb, 0x5b, 0x2e, 0xba, 0xd9, 0xd5, 0x8a, 0x4b, 0x51, 0x3b,
	0x4b, 0x36, 0x48, 0x1d, 0x1d, 0x7f, 0xfd, 0xe8, 0xd1, 0x71, 0x0f, 0x84, 0x10, 0xf1, 0x52, 0x95,
	0x5f, 0x2a, 0x1a, 0x9d, 0x20, 0x52, 0xa3, 0xa5, 0xb6, 0xf9, 0x4c, 0x7c, 0x4e, 0x50, 0xed, 0xd2,
	0x7c, 0xc9, 0xa6, 0xcd, 0x97, 0xdc, 0xe6, 0xf9, 0x92, 0x17, 0x71, 0xf4, 0x48, 0xaf, 0xbb, 0xa6,
	0xed, 0xbd, 0xc6, 0xee, 0xe2, 0x53, 0x21, 0xfa, 0x1c, 0x0e, 0x6d, 0xfc, 0xde, 0x60, 0x1f, 0xc7,
	0xd6, 0x22, 0x5f, 0xb5, 0xf1, 0x7b, 0x8a, 0x93, 0xb6, 0x67, 0xe0, 0x37, 0x19, 0x38, 0x4b, 0x3d,
	0x67, 0x91, 0x84, 0x17, 0x2b, 0x49, 0xf8, 0x66, 0x6d, 0xab, 0x4d, 0x6a, 0x1e, 0x7e, 0xff, 0xd1,
	0x79, 0xb8, 0x0d, 0xd5, 0xf8, 0x08, 0x0f, 0x13, 0x20, 0xc0, 0x61, 0x28, 0xee, 0x91, 0xc7, 0xc1,
	0xc0, 0x8a, 0xcf, 0xa6, 0xcc, 0xfc, 0xad, 0xa1, 0xff, 0x39, 0x17, 0x7d, 0x19, 0x96, 0xdf, 0x98,
	0xf6, 0x98, 0x3e, 0xfb, 0xf7, 0xe6, 0x83, 0xf4, 0xa1, 0xf7, 0x04, 0xaa, 0xc1, 0x20, 0x8a, 0x65,
	0x83, 0x45, 0x7a, 0x9f, 0x29, 0xa2, 0x5c, 0x7c, 0x03, 0xf6, 0xbc, 0xf9, 0x20, 0x0e, 0x64, 0x9d,
	0x79, 0xd7, 0x9b, 0x0f, 0x16, 0x28, 0xf1, 0x6f, 0x19, 0xb8, 0x9f, 0x78, 0x89, 0x45, 0x52, 0x9e,
	0xad, 0x24, 0xe5, 0x51, 0x6d, 0x23, 0x3e, 0x35, 0x21, 0xff, 0xfc, 0xe8, 0x84, 0xa4, 0x45, 0x3e,
	0x93, 0x9c, 0xaa, 0xf4, 0x84, 0x1c, 0xc0, 0x7e, 0x5c, 0xde, 0xeb, 0xd7, 0xf9, 0x7c, 0x9c, 0x39,
	0x52, 0x53, 0x53, 0xa4, 0xc6, 0x35, 0x55, 0xec, 0x6c, 0x4e, 0x5f, 0x41, 0x7c, 0x1a, 0xbd, 0x67,
	0x37, 0xb1, 0xf9, 0x8e, 0xbd, 0xed, 0xa6, 0x65, 0x4e, 0xfc, 0x3b, 0x17, 0x11, 0x6d, 0x01, 0x5f,
	0xc4, 0xb8, 0xbe, 0x12, 0xe3, 0xb3, 0x5a, 0x2a, 0x36, 0x35, 0xbe, 0x38, 0x39, 0xbc, 0xc9, 0xb1,
	0xe0, 0xd2, 0x1a, 0x46, 0x66, 0xb3, 0xdb, 0x59, 0xf1, 0x87, 0x91, 0x1f, 0x75, 0xec, 0x9b, 0xd1,
	0xa7, 0x13, 0xcb, 0xb1, 0xd1, 0x67, 0x50, 0x31, 0x87, 0x43, 0xec, 0x79, 0x86, 0x6b, 0x8d, 0xdf,
	0xf8, 0x5e, 0x10, 0x84, 0x5d, 0x26, 0xd4, 0xa8, 0xec, 0xc9, 0xbf, 0x72, 0x50, 0x5d, 0x9b, 0x17,
	0xe4, 0x3e, 0x09, 0x13, 0x83, 0xbf, 0x85, 0x1e, 0xc3, 0x67, 0x71, 0x45, 0xac, 0x56, 0xc8, 0x52,
	0x53, 0x5e, 0x28, 0xb2, 0xae, 0x34, 0x78, 0x0e, 0x9d, 0x83, 0xb8, 0x01, 0xa8, 0xab, 0x2d, 0xa5,
	0xd3, 0x27, 0x45, 0xf3, 0x04, 0xce, 0xe3, 0x38, 0xea, 0x18, 0x8b, 0x81, 0x14, 0xc6, 0x87, 0xbd,
	0x4c, 0xf2, 0x59, 0x74, 0x06, 0xf7, 0x53, 0xb0, 0x8b, 0x06, 0xfb, 0x2d, 0x78, 0xbc, 0x0e, 0x61,
	0x8b, 0xa0, 0x2a, 0x5f, 0x49, 0x6a, 0x53, 0xaa, 0x37, 0x15, 0x3e, 0x4f, 0xde, 0x43, 0xd3, 0xc1,
	0xf4, 0x7d, 0x77, 0x07, 0x3d, 0x85, 0x8b, 0x74, 0x4c, 0x58, 0xa2, 0x41, 0x1e, 0x0b, 0x9b, 0x8f,
	0x97, 0xf4, 0xd8, 0xbb, 0x31, 0x5f, 0x44, 0x5f, 0xc0, 0xd3, 0x74, 0x70, 0xc2, 0xdb, 0x6b, 0x09,
	0x5d, 0x42, 0x2d, 0xcd, 0x42, 0x4b, 0xe6, 0x2b, 0xac, 0x66, 0x6c, 0xd9, 0x26, 0xe2, 0x69, 0x19,
	0xd5, 0xe0, 0x49, 0x12, 0x50, 0xee, 0x68, 0x9a, 0x22, 0xeb, 0x46, 0xbf, 0xa7, 0x68, 0x86, 0xa6,
	0xf4, 0xba, 0x9d, 0x76, 0x43, 0x69, 0xf0, 0xbb, 0xc9, 0xd9, 0x88, 0x15, 0x29, 0x5f, 0xa9, 0xe7,
	0x9f, 0x73, 0x3f, 0xe3, 0x6e, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x6f, 0x4a, 0xea, 0x98,
	0x1b, 0x00, 0x00,
}
